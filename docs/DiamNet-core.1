.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "diamnet\-core" "1" "" "" ""
.hy
.SH NAME
.PP
diamnet\-core \- Core daemon for diamnet payment network
.SH SYNOPSYS
.PP
diamnet\-core [OPTIONS]
.SH DESCRIPTION
.PP
diamnet is a decentralized, federated peer\-to\-peer network that allows
people to send payments in any asset anywhere in the world
instantaneously, and with minimal fee.
\f[C]diamnet\-core\f[] is the core component of this network.
\f[C]diamnet\-core\f[] is a C++ implementation of the diamnet Consensus
Protocol configured to construct a chain of ledgers that are guaranteed
to be in agreement across all the participating nodes at all times.
.SS Configuration file
.PP
In most modes of operation, diamnet\-core requires a configuration file.
By default, it looks for a file called \f[C]diamnet\-core.cfg\f[] in the
current working directory, but this default can be changed by the
\f[C]\-\-conf\f[] command\-line option.
The configuration file is in TOML syntax.
The full set of supported directives can be found in
\f[C]/usr/local/share/doc/diamnet\-core_example.cfg\f[].
.SS Common options
.PP
Common options can be placed at any place in the command line.
.IP \[bu] 2
\f[B]\-\-conf \f[]: Specify a config file to use.
You can use \[aq]\-\[aq] and provide the config file via STDIN.
\f[I]default \[aq]diamnet\-core.cfg\[aq]\f[]
.IP \[bu] 2
\f[B]\-\-ll \f[]: Set the log level.
It is redundant with \f[C]http\-command\ ll\f[] but we need this form if
you want to change the log level during test runs.
.IP \[bu] 2
\f[B]\-\-metric \f[]: Report metric METRIC on exit.
Used for gathering a metric cumulatively during a test run.
.IP \[bu] 2
\f[B]\-\-help\f[]: Show help message for given command.
.SS Command line options
.PP
Command options can only by placed after command.
.IP \[bu] 2
\f[B]catchup <DESTINATION\-LEDGER/LEDGER\-COUNT>\f[]: Perform catchup
from history archives without connecting to network.
For new instances (with empty history tables \- only ledger 1 present in
the database) it will respect LEDGER\-COUNT configuration and it will
perform bucket application on such a checkpoint that at least
LEDGER\-COUNT entries are present in history table afterwards.
For instances that already have some history entries, all ledgers since
last closed ledger will be replayed.
.IP \[bu] 2
\f[B]check\-quorum\f[]: Check quorum intersection from history to ensure
there is closure over all the validators in the network.
.IP \[bu] 2
\f[B]convert\-id \f[]: Will output the passed ID in all known forms and
then exit.
Useful for determining the public key that corresponds to a given
private key.
For example:
.PP
\f[C]$\ diamnet\-core\ convert\-id\ SDQVDISRYN2JXBS7ICL7QJAEKB3HWBJFP2QECXG7GZICAHBK4UNJCWK2\f[]
.IP \[bu] 2
\f[B]dump\-xdr \f[]: Dumps the given XDR file and then exits.
.IP \[bu] 2
\f[B]force\-scp\f[]: This command is used to start a network from
scratch or when a network has lost quorum because of failed nodes or
otherwise.
It sets a flag in the database.
The next time diamnet\-core is run, diamnet\-core will start emitting SCP
messages based on its last known ledger.
Without this flag diamnet\-core waits to hear a ledger close from the
network before starting SCP. force\-scp doesn\[aq]t change the
requirements for quorum so although this node will emit SCP messages SCP
won\[aq]t complete until there are also a quorum of other nodes also
emitting SCP messages on this same ledger.
Value of force\-scp can be reset with \-\-reset flag.
.IP \[bu] 2
\f[B]fuzz \f[]: Run a single fuzz input and exit.
.IP \[bu] 2
\f[B]gen\-fuzz \f[]: Generate a random fuzzer input file.
.IP \[bu] 2
\f[B]gen\-seed\f[]: Generate and print a random public/private key and
then exit.
.IP \[bu] 2
\f[B]help\f[]: Print the available command line options and then exit..
.IP \[bu] 2
\f[B]http\-command \f[] Send an HTTP command (#http-commands) to an
already running local instance of diamnet\-core and then exit.
For example:
.PP
\f[C]$\ diamnet\-core\ http\-command\ info\f[]
.IP \[bu] 2
\f[B]infer\-quorum\f[]: Print a potential quorum set inferred from
history.
.IP \[bu] 2
\f[B]load\-xdr \f[]: Load an XDR bucket file, for testing.
.IP \[bu] 2
\f[B]new\-db\f[]: Clears the local database and resets it to the genesis
ledger.
If you connect to the network after that it will catch up from scratch.
.IP \[bu] 2
\f[B]new\-hist ...\f[]: Initialize the named history archives
HISTORY\-LABEL.
HISTORY\-LABEL should be one of the history archives you have specified
in the diamnet\-core.cfg.
This will write a \f[C]\&.well\-known/diamnet\-history.json\f[] file in
the archive root.
.IP \[bu] 2
\f[B]offline\-info\f[]: Returns an output similar to
\f[C]\-\-c\ info\f[] for an offline instance
.IP \[bu] 2
\f[B]print\-xdr \f[]: Pretty\-print a binary file containing an XDR
object.
If FILE\-NAME is "\-", the XDR object is read from standard input.
Option \-\-filetype
[auto|ledgerheader|meta|result|resultpair|tx|txfee]** controls type used
for printing (default: auto). Option \-\-base64 alters the behavior to
work on base64\-encoded XDR rather than raw XDR.
.IP \[bu] 2
\f[B]publish\f[]: Execute publish of all items remaining in publish
queue without connecting to network.
May not publish last checkpoint if last closed ledger is on checkpoint
boundary.
.IP \[bu] 2
\f[B]report\-last\-history\-checkpoint\f[]: Download and report last
history checkpoint from a history archive.
.IP \[bu] 2
\f[B]run\f[]: Runs diamnet\-core service.
.IP \[bu] 2
\f[B]sec\-to\-pub\f[]: Reads a secret key on standard input and outputs
the corresponding public key.
Both keys are in diamnet\[aq]s standard base\-32 ASCII format.
.IP \[bu] 2
\f[B]sign\-transaction \f[]: Add a digital signature to a transaction
envelope stored in binary format in , and send the result to standard
output (which should be redirected to a file or piped through a tool
such as \f[C]base64\f[]).
The private signing key is read from standard input, unless is "\-" in
which case the transaction envelope is read from standard input and the
signing key is read from \f[C]/dev/tty\f[].
In either event, if the signing key appears to be coming from a
terminal, diamnet\-core disables echo.
Note that if you do not have a diamnet_NETWORK_ID environment variable,
then before this argument you must specify the \-\-netid option.
For example, the production diamnet network is
"\f[C]Public\ Global\ diamnet\ Network\ ;\ \ \ September\ 2015\f[]" while
the test network is
"\f[C]Test\ SDF\ Network\ ;\ September\ \ \ 2015\f[]". Option \-\-base64
alters the behavior to work on base64\-encoded XDR rather than raw XDR.
.IP \[bu] 2
\f[B]test\f[]: Run all the unit tests.
.IP \[bu] 2
Suboptions specific to diamnet\-core:
.RS 2
.IP \[bu] 2
\f[C]\-\-all\-versions\f[] : run with all possible protocol versions
.IP \[bu] 2
\f[C]\-\-version\ <N>\f[] : run tests for protocol version N, can be
specified multiple times (default latest)
.IP \[bu] 2
\f[C]\-\-base\-instance\ <N>\f[] : run tests with instance numbers
offset by N, used to run tests in parallel
.RE
.IP \[bu] 2
For further
info (https://github.com/philsquared/Catch/blob/master/docs/command-line.md)
on possible options for test.
.IP \[bu] 2
For example this will run just the tests tagged with \f[C][tx]\f[] using
protocol versions 9 and 10 and stop after the first failure:
\f[C]diamnet\-core\ test\ \-a\ \-\-version\ 9\ \-\-version\ 10\ "[tx]"\f[]
.IP \[bu] 2
\f[B]upgrade\-db\f[]: Upgrades local database to current schema version.
This is usually done automatically during diamnet\-core run or other
command.
.IP \[bu] 2
\f[B]version\f[]: Print version info and then exit.
.IP \[bu] 2
\f[B]write\-quorum\f[]: Print a quorum set graph from history.
.SS HTTP Commands
.PP
By default diamnet\-core listens for connections from localhost on port
11626.
You can send commands to diamnet\-core via a web browser, curl, or using
the \-\-c command line option (see above).
Most commands return their results in JSON format.
.IP \[bu] 2
\f[B]bans\f[] List current active bans
.IP \[bu] 2
\f[B]checkdb\f[] Triggers the instance to perform a background check of
the database\[aq]s state.
.IP \[bu] 2
\f[B]checkpoint\f[] Triggers the instance to write an immediate history
checkpoint.
And uploads it to the archive.
.IP \[bu] 2
\f[B]connect\f[] \f[C]connect?peer=NAME&port=NNN\f[] Triggers the
instance to connect to peer NAME at port NNN.
.IP \[bu] 2
\f[B]dropcursor\f[]
.PD 0
.P
.PD
\f[C]dropcursor?id=ID\f[] Deletes the tracking cursor identified by
\f[C]id\f[].
See \f[C]setcursor\f[] for more information.
.IP \[bu] 2
\f[B]droppeer\f[] \f[C]droppeer?node=NODE_ID[&ban=D]\f[] Drops peer
identified by NODE_ID, when D is 1 the peer is also banned.
.IP \[bu] 2
\f[B]info\f[] Returns information about the server in JSON format (sync
state, connected peers, etc).
.IP \[bu] 2
\f[B]ll\f[]
.PD 0
.P
.PD
\f[C]ll?level=L[&partition=P]\f[] Adjust the log level for partition P
where P is one of Bucket, Database, Fs, Herder, History, Ledger,
Overlay, Process, SCP, Tx (or all if no partition is specified).
Level is one of FATAL, ERROR, WARNING, INFO, DEBUG, VERBOSE, TRACE.
.IP \[bu] 2
\f[B]logrotate\f[] Rotate log files.
.IP \[bu] 2
\f[B]maintenance\f[] \f[C]maintenance?[queue=true]\f[] Performs
maintenance tasks on the instance.
.IP \[bu] 2
\f[C]queue\f[] performs deletion of queue data.
See \f[C]setcursor\f[] for more information.
.IP \[bu] 2
\f[B]metrics\f[] Returns a snapshot of the metrics registry (for
monitoring and debugging purpose).
.IP \[bu] 2
\f[B]clearmetrics\f[] \f[C]clearmetrics?[domain=DOMAIN]\f[] Clear
metrics for a specified domain.
If no domain specified, clear all metrics (for testing purposes).
.IP \[bu] 2
\f[B]peers?[&fullkeys=true]\f[] Returns the list of known peers in JSON
format.
If \f[C]fullkeys\f[] is set, outputs unshortened public keys.
.IP \[bu] 2
\f[B]quorum\f[]
\f[C]quorum?[node=NODE_ID][&compact=true][&fullkeys=true][&transitive=true]\f[]
Returns information about the quorum for \f[C]NODE_ID\f[] (local node by
default).
If \f[C]transitive\f[] is set, information is for the transitive quorum
centered on \f[C]NODE_ID\f[], otherwise only for nodes in the quorum set
of \f[C]NODE_ID\f[].
.PP
\f[C]NODE_ID\f[] is either a full key (\f[C]GABCD...\f[]), an alias
(\f[C]$name\f[]) or an abbreviated ID (\f[C]\@GABCD\f[]).
.PP
If \f[C]compact\f[] is set, only returns a summary version.
.PP
If \f[C]fullkeys\f[] is set, outputs unshortened public keys.
.IP \[bu] 2
\f[B]setcursor\f[] \f[C]setcursor?id=ID&cursor=N\f[] Sets or creates a
cursor identified by \f[C]ID\f[] with value \f[C]N\f[].
ID is an uppercase AlphaNum, N is an uint32 that represents the last
ledger sequence number that the instance ID processed.
Cursors are used by dependent services to tell diamnet\-core which data
can be safely deleted by the instance.
The data is historical data stored in the SQL tables such as txhistory
or ledgerheaders.
When all consumers processed the data for ledger sequence N the data can
be safely removed by the instance.
The actual deletion is performed by invoking the \f[C]maintenance\f[]
endpoint or on startup.
See also \f[C]dropcursor\f[].
.IP \[bu] 2
\f[B]getcursor\f[] \f[C]getcursor?[id=ID]\f[] Gets the cursor identified
by \f[C]ID\f[].
If ID is not defined then all cursors will be returned.
.IP \[bu] 2
\f[B]scp\f[] \f[C]scp?[limit=n][&fullkeys=true]\f[] Returns a JSON
object with the internal state of the SCP engine for the last n (default
2) ledgers.
Outputs unshortened public keys if fullkeys is set.
.IP \[bu] 2
\f[B]tx\f[] \f[C]tx?blob=Base64\f[] Submit a transaction to the network.
blob is a base64 encoded XDR serialized \[aq]TransactionEnvelope\[aq],
and it returns a JSON object with the following properties status:
.RS 2
.IP \[bu] 2
"PENDING" \- transaction is being considered by consensus
.IP \[bu] 2
"DUPLICATE" \- transaction is already PENDING
.IP \[bu] 2
"ERROR" \- transaction rejected by transaction engine error: set when
status is "ERROR".
Base64 encoded, XDR serialized \[aq]TransactionResult\[aq]
.RE
.IP \[bu] 2
\f[B]upgrades\f[]
.IP \[bu] 2
\f[C]upgrades?mode=get\f[] Retrieves the currently configured upgrade
settings.
.IP \[bu] 2
\f[C]upgrades?mode=clear\f[] Clears any upgrade settings.
.IP \[bu] 2
\f[C]upgrades?mode=set&upgradetime=DATETIME&[basefee=NUM]&[basereserve=NUM]&[maxtxsize=NUM]&[protocolversion=NUM]\f[]
.RS 2
.IP \[bu] 2
upgradetime is a required date (UTC) in the form
\f[C]1970\-01\-01T00:00:00Z\f[].
It is the time the upgrade will be scheduled for.
If it is in the past, the upgrade will occur immediately.
.IP \[bu] 2
fee (uint32) This is what you would prefer the base fee to be.
It is in stroops
.IP \[bu] 2
basereserve (uint32) This is what you would prefer the base reserve to
be.
It is in stroops.
.IP \[bu] 2
maxtxsize (uint32) This defines the maximum number of transactions to
include in a ledger.
When too many transactions are pending, surge pricing is applied.
The instance picks the top maxtxsize transactions locally to be
considered in the next ledger.
Where transactions are ordered by transaction fee(lower fee transactions
are held for later).
.IP \[bu] 2
protocolversion (uint32) defines the protocol version to upgrade to.
When specified it must match one of the protocol versions supported by
the node and should be greater than ledgerVersion from the current
ledger
.RE
.SS The following HTTP commands are exposed on test instances
.IP \[bu] 2
\f[B]generateload\f[]
\f[C]generateload[?mode=(create|pay)&accounts=N&offset=K&txs=M&txrate=R&batchsize=L]\f[]
Artificially generate load for testing; must be used with
\f[C]ARTIFICIALLY_GENERATE_LOAD_FOR_TESTING\f[] set to true.
Depending on the mode, either creates new accounts or generates payments
on accounts specified (where number of accounts can be offset).
Additionally, allows batching up to 100 account creations per
transaction via \[aq]batchsize\[aq].
.IP \[bu] 2
\f[B]manualclose\f[] If MANUAL_CLOSE is set to true in the .cfg file.
This will cause the current ledger to close.
.IP \[bu] 2
\f[B]testacc\f[] \f[C]testacc?name=N\f[] Returns basic information about
the account identified by name.
Note that N is a string used as seed, but "root" can be used as well to
specify the root account used for the test instance.
.IP \[bu] 2
\f[B]testtx\f[] \f[C]testtx?from=F&to=T&amount=N&[create=true]\f[]
Injects a payment transaction (or a create transaction if "create" is
specified) from the account F to the account T, sending N XLM to the
account.
Note that F and T are seed strings but can also be specified as "root"
as shorthand for the root account for the test instance.
.SH EXAMPLES
.PP
See \f[C]/usr/local/share/doc/*.cfg\f[] for some example diamnet\-core
configuration files
.SH FILES
.TP
.B diamnet\-core.cfg
Configuration file (in current working directory by default)
.RS
.RE
.SH SEE ALSO
.TP
.B <https://www.diamnet.org/developers/diamnet-core/software/admin.html>
diamnet\-core administration guide
.RS
.RE
.TP
.B <https://www.diamnet.org>
Home page of diamnet development foundation
.RS
.RE
.SH BUGS
.PP
Please report bugs using the github issue tracker:
.PD 0
.P
.PD
<https://github.com/diamnet/diamnet-core/issues>
.SH AUTHORS
diamnet Development Foundation.
